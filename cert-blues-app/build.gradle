plugins {
    id 'project-java-conventions'
    id 'org.unbroken-dome.test-sets'
    id 'org.springframework.boot'
}

testSets {
    stagingTest
}

dependencies {
    compileOnly 'com.google.auto.value:auto-value-annotations'
    annotationProcessor 'com.google.auto.value:auto-value'

    compileOnly 'org.jetbrains:annotations'

    implementation(group: 'com.google.guava', name: 'guava') {
        transitive = false
    }

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter'

    implementation 'com.azure:azure-identity'

    implementation project(':cert-blues-acme')
    implementation project(':cert-blues-certbot')
    implementation project(':cert-blues-azure')

    runtimeOnly 'ch.qos.logback:logback-classic'

    // add static native libraries from netty to support HTTP/2.0 over TLS with OpenSSL
    runtimeOnly group: 'io.netty', name: 'netty-tcnative-boringssl-static', classifier: 'linux-x86_64'
    runtimeOnly group: 'io.netty', name: 'netty-tcnative-boringssl-static', classifier: 'windows-x86_64'

    testImplementation project(':cert-blues-test-common')

    stagingTestImplementation 'org.springframework.boot:spring-boot-test'
    stagingTestImplementation 'org.springframework:spring-test'
}

bootJar {
    exclude 'application-dev.yml'
}

stagingTest {
    useJUnitPlatform()
}

tasks.register('copyContextDeps', Copy) {
    description = 'Copies the Dockerfile context dependencies'

    from {
        tasks.bootJar.outputs
    }
    into 'build/context'
}

tasks.register('buildImage', Exec) {
    group = 'build'
    description = 'Builds the Docker image for local tests'
    dependsOn 'copyContextDeps'

    executable = 'docker'

    args = [
            'build',
            '--build-arg', "APP_VERSION=${project.version}",
            '-t', "cert-blues-app:${project.version}",
            '-t', 'cert-blues-app:latest',
            '.'
    ]
}

tasks.register('runContainer', Exec) {
    description = 'Runs container with the app JAR locally in Docker'
    executable = 'docker'

    args = [
            'run',
            '--rm',
            '--env-file', 'local.settings.env',
            '--name', 'cert-blues-app',
            'cert-blues-app:latest'
    ]
}

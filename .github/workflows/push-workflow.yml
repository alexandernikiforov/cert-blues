name: CI Build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Execute Gradle build
        run: ./gradlew build copyContextDeps

      - name: Upload unit-test report
        uses: actions/upload-artifact@v3
        with:
          name: unit-test
          path: build/reports/tests/unit-test/aggregated-results

      - name: Upload test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: build/reports/jacoco/testCodeCoverageReport

      - name: Run staging test
        run: ./gradlew stagingTest
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      - name: Upload staging test report
        uses: actions/upload-artifact@v3
        with:
          name: staging-test
          path: cert-blues-app/build/reports/tests/stagingTest

      - name: Print project version
        id: get-version
        run: |
          ./gradlew properties --console=plain | grep version | awk -F': ' '{ print "::set-output name=VERSION::" $2; }'

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/alexandernikiforov/cert-blues-app
          tags: |
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: cert-blues-app
          build-args: |
            APP_VERSION=${{ steps.get-version.outputs.VERSION }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
